{"ast":null,"code":"var _jsxFileName = \"/Users/alex416/projects/react_app/react-lesson/src/screens/Drinks/Ingridients/Ingridients.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Drink from '../../../components/DrinkArticle/Drink';\nimport { getFilterList, getGlassList } from '../../../hooks/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Ingridient = () => {\n  _s();\n\n  const [dataList, setDataList] = useState([]);\n  useEffect(() => {\n    (async function () {\n      try {\n        const {\n          data\n        } = await getIngridientList();\n\n        if (data && data.drinks) {\n          setDataList(data.drinks);\n        }\n      } catch (e) {\n        console.log(e);\n      }\n    })();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"drinkContainer\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"drinkArticles\",\n      children: dataList.map(el => /*#__PURE__*/_jsxDEV(Drink, {\n        item: el\n      }, el.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Ingridient, \"Q8xkRfrPPyoly26OmJCucpuPJ7I=\");\n\n_c = Ingridient;\nexport { Ingridient };\n\nvar _c;\n\n$RefreshReg$(_c, \"Ingridient\");","map":{"version":3,"names":["React","useEffect","useState","Drink","getFilterList","getGlassList","Ingridient","dataList","setDataList","data","getIngridientList","drinks","e","console","log","map","el","id"],"sources":["/Users/alex416/projects/react_app/react-lesson/src/screens/Drinks/Ingridients/Ingridients.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Drink from '../../../components/DrinkArticle/Drink';\nimport { getFilterList, getGlassList } from '../../../hooks/api';\n\n\nconst Ingridient = () => {\n     \n  const [dataList, setDataList] = useState([])\n  useEffect(() => {\n    (async function() {\n      try {\n        const {data } = await getIngridientList();\n        if (data && data.drinks) {\n          setDataList(data.drinks);\n        }\n      } catch (e) {\n        console.log(e);\n      }\n    })();\n  }, [])\n\n  return (\n    <div className='drinkContainer'>\n        <div className='drinkArticles'>\n              {dataList.map(el => (\n          <Drink key={el.id} item={el}></Drink>\n              ))}\n        </div>\n    </div>\n  )\n}\n\nexport { Ingridient };"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,wCAAlB;AACA,SAASC,aAAT,EAAwBC,YAAxB,QAA4C,oBAA5C;;;AAGA,MAAMC,UAAU,GAAG,MAAM;EAAA;;EAEvB,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,EAAD,CAAxC;EACAD,SAAS,CAAC,MAAM;IACd,CAAC,kBAAiB;MAChB,IAAI;QACF,MAAM;UAACQ;QAAD,IAAU,MAAMC,iBAAiB,EAAvC;;QACA,IAAID,IAAI,IAAIA,IAAI,CAACE,MAAjB,EAAyB;UACvBH,WAAW,CAACC,IAAI,CAACE,MAAN,CAAX;QACD;MACF,CALD,CAKE,OAAOC,CAAP,EAAU;QACVC,OAAO,CAACC,GAAR,CAAYF,CAAZ;MACD;IACF,CATD;EAUD,CAXQ,EAWN,EAXM,CAAT;EAaA,oBACE;IAAK,SAAS,EAAC,gBAAf;IAAA,uBACI;MAAK,SAAS,EAAC,eAAf;MAAA,UACOL,QAAQ,CAACQ,GAAT,CAAaC,EAAE,iBACpB,QAAC,KAAD;QAAmB,IAAI,EAAEA;MAAzB,GAAYA,EAAE,CAACC,EAAf;QAAA;QAAA;QAAA;MAAA,QADK;IADP;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADF;AASD,CAzBD;;GAAMX,U;;KAAAA,U;AA2BN,SAASA,UAAT"},"metadata":{},"sourceType":"module"}